//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.WindowsPhone.ImageDesigner.Core.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings1() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.WindowsPhone.ImageDesigner.Core.Resources.Strings1", typeof(Strings1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        public static string bCOSAddApplications {
            get {
                return ResourceManager.GetString("bCOSAddApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        public static string bCOSAddDataAssetsGroup {
            get {
                return ResourceManager.GetString("bCOSAddDataAssetsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        public static string bCOSAddDataAssetsGroups {
            get {
                return ResourceManager.GetString("bCOSAddDataAssetsGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        public static string bCOSAddSettings {
            get {
                return ResourceManager.GetString("bCOSAddSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        public static string bCOSAddSettingsAssets {
            get {
                return ResourceManager.GetString("bCOSAddSettingsAssets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        public static string bCOSAddSettingsGroups {
            get {
                return ResourceManager.GetString("bCOSAddSettingsGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        public static string bCOSAddTarget {
            get {
                return ResourceManager.GetString("bCOSAddTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        public static string bCOSAddTargets {
            get {
                return ResourceManager.GetString("bCOSAddTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        public static string bCOSAddVariant {
            get {
                return ResourceManager.GetString("bCOSAddVariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string bCOSAddVariantCancel {
            get {
                return ResourceManager.GetString("bCOSAddVariantCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string bCOSAddVariantOK {
            get {
                return ResourceManager.GetString("bCOSAddVariantOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Next.
        /// </summary>
        public static string bCOSNextError {
            get {
                return ResourceManager.GetString("bCOSNextError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Previous.
        /// </summary>
        public static string bCOSPreviousError {
            get {
                return ResourceManager.GetString("bCOSPreviousError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string bCOSRemoveApplications {
            get {
                return ResourceManager.GetString("bCOSRemoveApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string bCOSRemoveDataAssetsGroup {
            get {
                return ResourceManager.GetString("bCOSRemoveDataAssetsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string bCOSRemoveDataAssetsGroups {
            get {
                return ResourceManager.GetString("bCOSRemoveDataAssetsGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string bCOSRemoveSettings {
            get {
                return ResourceManager.GetString("bCOSRemoveSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string bCOSRemoveSettingsAssets {
            get {
                return ResourceManager.GetString("bCOSRemoveSettingsAssets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string bCOSRemoveSettingsGroups {
            get {
                return ResourceManager.GetString("bCOSRemoveSettingsGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string bCOSRemoveTarget {
            get {
                return ResourceManager.GetString("bCOSRemoveTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string bCOSRemoveTargets {
            get {
                return ResourceManager.GetString("bCOSRemoveTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string bCOSRemoveVariant {
            get {
                return ResourceManager.GetString("bCOSRemoveVariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        public static string bPinnedAppAdd {
            get {
                return ResourceManager.GetString("bPinnedAppAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string bPinnedAppCancel {
            get {
                return ResourceManager.GetString("bPinnedAppCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string bPinnedAppOK {
            get {
                return ResourceManager.GetString("bPinnedAppOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add &gt;&gt;.
        /// </summary>
        public static string bSelectTemplates_Add_Text {
            get {
                return ResourceManager.GetString("bSelectTemplates_Add_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;&lt; Remove.
        /// </summary>
        public static string bSelectTemplates_Remove_Text {
            get {
                return ResourceManager.GetString("bSelectTemplates_Remove_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Build.
        /// </summary>
        public static string btBuild_Text {
            get {
                return ResourceManager.GetString("btBuild_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Build your image.
        /// </summary>
        public static string btBuildImage {
            get {
                return ResourceManager.GetString("btBuildImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clear Log.
        /// </summary>
        public static string btBuildImageClearLog {
            get {
                return ResourceManager.GetString("btBuildImageClearLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Output Folder.
        /// </summary>
        public static string btBuildImageOpenOutputFolder {
            get {
                return ResourceManager.GetString("btBuildImageOpenOutputFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View in Notepad.
        /// </summary>
        public static string btBuildImageViewInNotepad {
            get {
                return ResourceManager.GetString("btBuildImageViewInNotepad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string btCancel_Text {
            get {
                return ResourceManager.GetString("btCancel_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string btCustomGetValueDialogCancel {
            get {
                return ResourceManager.GetString("btCustomGetValueDialogCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string btCustomGetValueDialogOK {
            get {
                return ResourceManager.GetString("btCustomGetValueDialogOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No.
        /// </summary>
        public static string btCustomMessageBoxNo {
            get {
                return ResourceManager.GetString("btCustomMessageBoxNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string btCustomMessageBoxOK {
            get {
                return ResourceManager.GetString("btCustomMessageBoxOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Yes.
        /// </summary>
        public static string btCustomMessageBoxYes {
            get {
                return ResourceManager.GetString("btCustomMessageBoxYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flash.
        /// </summary>
        public static string btFlash {
            get {
                return ResourceManager.GetString("btFlash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flash.
        /// </summary>
        public static string btFlash_Text {
            get {
                return ResourceManager.GetString("btFlash_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Define Macros.
        /// </summary>
        public static string btnDefineMacros {
            get {
                return ResourceManager.GetString("btnDefineMacros", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Next &gt;&gt;.
        /// </summary>
        public static string btNext_Text {
            get {
                return ResourceManager.GetString("btNext_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Restart Customization.
        /// </summary>
        public static string btRestartCustomization_Text {
            get {
                return ResourceManager.GetString("btRestartCustomization_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save.
        /// </summary>
        public static string btSave_Text {
            get {
                return ResourceManager.GetString("btSave_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start over.
        /// </summary>
        public static string btStartOver_Text {
            get {
                return ResourceManager.GetString("btStartOver_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 6-Col Tile Size.
        /// </summary>
        public static string ch6ColPinnedAppTileSize {
            get {
                return ResourceManager.GetString("ch6ColPinnedAppTileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auto Scroll.
        /// </summary>
        public static string chkAutoScroll {
            get {
                return ResourceManager.GetString("chkAutoScroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do not show this dialog again..
        /// </summary>
        public static string chkCustomMessageNoShowAgain {
            get {
                return ResourceManager.GetString("chkCustomMessageNoShowAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tile Size.
        /// </summary>
        public static string chPinnedAppTileSize {
            get {
                return ResourceManager.GetString("chPinnedAppTileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type.
        /// </summary>
        public static string chPinnedAppType {
            get {
                return ResourceManager.GetString("chPinnedAppType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add New Variant.
        /// </summary>
        public static string dlgHdrCOSAddNewVariant {
            get {
                return ResourceManager.GetString("dlgHdrCOSAddNewVariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify the Name and at least on Target State Condition.
        /// </summary>
        public static string dlgInstructionsCOSAddNewVariant {
            get {
                return ResourceManager.GetString("dlgInstructionsCOSAddNewVariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Large.
        /// </summary>
        public static string eAppTileSizeLarge {
            get {
                return ResourceManager.GetString("eAppTileSizeLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Medium.
        /// </summary>
        public static string eAppTileSizeMedium {
            get {
                return ResourceManager.GetString("eAppTileSizeMedium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not configured.
        /// </summary>
        public static string eAppTileSizeNotConfigured {
            get {
                return ResourceManager.GetString("eAppTileSizeNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Small.
        /// </summary>
        public static string eAppTileSizeSmall {
            get {
                return ResourceManager.GetString("eAppTileSizeSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MS Application.
        /// </summary>
        public static string eAppTypeMSApplication {
            get {
                return ResourceManager.GetString("eAppTypeMSApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OEM Application.
        /// </summary>
        public static string eAppTypeOEMApplication {
            get {
                return ResourceManager.GetString("eAppTypeOEMApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Web Link.
        /// </summary>
        public static string eAppTypeWebLink {
            get {
                return ResourceManager.GetString("eAppTypeWebLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data Sense.
        /// </summary>
        public static string eFeatureLayoutDataSense {
            get {
                return ResourceManager.GetString("eFeatureLayoutDataSense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Games Hub.
        /// </summary>
        public static string eFeatureLayoutGamesHub {
            get {
                return ResourceManager.GetString("eFeatureLayoutGamesHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Kid&apos;s Corner.
        /// </summary>
        public static string eFeatureLayoutKidsCorner {
            get {
                return ResourceManager.GetString("eFeatureLayoutKidsCorner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local Scout.
        /// </summary>
        public static string eFeatureLayoutLocalScout {
            get {
                return ResourceManager.GetString("eFeatureLayoutLocalScout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Office.
        /// </summary>
        public static string eFeatureLayoutOffice {
            get {
                return ResourceManager.GetString("eFeatureLayoutOffice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OneNote.
        /// </summary>
        public static string eFeatureLayoutOneNote {
            get {
                return ResourceManager.GetString("eFeatureLayoutOneNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Xbox Video.
        /// </summary>
        public static string eFeatureLayoutXboxVideo {
            get {
                return ResourceManager.GetString("eFeatureLayoutXboxVideo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Alarms.
        /// </summary>
        public static string eMSAppsAlarms {
            get {
                return ResourceManager.GetString("eMSAppsAlarms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calculator.
        /// </summary>
        public static string eMSAppsCalculator {
            get {
                return ResourceManager.GetString("eMSAppsCalculator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calendar.
        /// </summary>
        public static string eMSAppsCalendar {
            get {
                return ResourceManager.GetString("eMSAppsCalendar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Camera.
        /// </summary>
        public static string eMSAppsCamera {
            get {
                return ResourceManager.GetString("eMSAppsCamera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data Sense.
        /// </summary>
        public static string eMSAppsDataSense {
            get {
                return ResourceManager.GetString("eMSAppsDataSense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Family Room.
        /// </summary>
        public static string eMSAppsFamilyRoom {
            get {
                return ResourceManager.GetString("eMSAppsFamilyRoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на FM Radio.
        /// </summary>
        public static string eMSAppsFMRadio {
            get {
                return ResourceManager.GetString("eMSAppsFMRadio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Games.
        /// </summary>
        public static string eMSAppsGames {
            get {
                return ResourceManager.GetString("eMSAppsGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Help &amp; Tips.
        /// </summary>
        public static string eMSAppsHelpAndTips {
            get {
                return ResourceManager.GetString("eMSAppsHelpAndTips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Kids Corner.
        /// </summary>
        public static string eMSAppsKidsCorner {
            get {
                return ResourceManager.GetString("eMSAppsKidsCorner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local Scout.
        /// </summary>
        public static string eMSAppsLocalScout {
            get {
                return ResourceManager.GetString("eMSAppsLocalScout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maps.
        /// </summary>
        public static string eMSAppsMaps {
            get {
                return ResourceManager.GetString("eMSAppsMaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Music.
        /// </summary>
        public static string eMSAppsMusic {
            get {
                return ResourceManager.GetString("eMSAppsMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Office.
        /// </summary>
        public static string eMSAppsOffice {
            get {
                return ResourceManager.GetString("eMSAppsOffice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OneNote.
        /// </summary>
        public static string eMSAppsOneNote {
            get {
                return ResourceManager.GetString("eMSAppsOneNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Podcasts.
        /// </summary>
        public static string eMSAppsPodcasts {
            get {
                return ResourceManager.GetString("eMSAppsPodcasts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string eMSAppsSettings {
            get {
                return ResourceManager.GetString("eMSAppsSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Video.
        /// </summary>
        public static string eMSAppsVideo {
            get {
                return ResourceManager.GetString("eMSAppsVideo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wallet.
        /// </summary>
        public static string eMSAppsWallet {
            get {
                return ResourceManager.GetString("eMSAppsWallet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Featured.
        /// </summary>
        public static string eStartLayoutFeatured {
            get {
                return ResourceManager.GetString("eStartLayoutFeatured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full.
        /// </summary>
        public static string eStartLayoutFull {
            get {
                return ResourceManager.GetString("eStartLayoutFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Layout One.
        /// </summary>
        public static string eStartLayoutLayout1 {
            get {
                return ResourceManager.GetString("eStartLayoutLayout1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Layout Two.
        /// </summary>
        public static string eStartLayoutLayout2 {
            get {
                return ResourceManager.GetString("eStartLayoutLayout2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you want to customize your phone image?.
        /// </summary>
        public static string gbCustomize {
            get {
                return ResourceManager.GetString("gbCustomize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Target State Condition.
        /// </summary>
        public static string gCOSAddTargetStateCondition {
            get {
                return ResourceManager.GetString("gCOSAddTargetStateCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Common Target State Conditions.
        /// </summary>
        public static string gCOSCommonConditions {
            get {
                return ResourceManager.GetString("gCOSCommonConditions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Errors {0} of {1}.
        /// </summary>
        public static string gCOSErrorsTitle {
            get {
                return ResourceManager.GetString("gCOSErrorsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Other Target State Conditions.
        /// </summary>
        public static string gCOSOtherConditions {
            get {
                return ResourceManager.GetString("gCOSOtherConditions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Choose your image type.
        /// </summary>
        public static string gpSelectImageType {
            get {
                return ResourceManager.GetString("gpSelectImageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на What would you like to do today?.
        /// </summary>
        public static string gpWhatToDoToday {
            get {
                return ResourceManager.GetString("gpWhatToDoToday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на here.
        /// </summary>
        public static string hlBuildSuccessViewImageOptionsSummary {
            get {
                return ResourceManager.GetString("hlBuildSuccessViewImageOptionsSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View Log.
        /// </summary>
        public static string hlBuildSuccessViewLog {
            get {
                return ResourceManager.GetString("hlBuildSuccessViewLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hide Unset Items.
        /// </summary>
        public static string hlCOSHideUnset {
            get {
                return ResourceManager.GetString("hlCOSHideUnset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show All.
        /// </summary>
        public static string hlCOSShowAll {
            get {
                return ResourceManager.GetString("hlCOSShowAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change.
        /// </summary>
        public static string hlFlashImageChangeImageLink {
            get {
                return ResourceManager.GetString("hlFlashImageChangeImageLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change.
        /// </summary>
        public static string hlModifyImageChange {
            get {
                return ResourceManager.GetString("hlModifyImageChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select.
        /// </summary>
        public static string hlPickOutputLocationSelect {
            get {
                return ResourceManager.GetString("hlPickOutputLocationSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pin Applications to Start.
        /// </summary>
        public static string hlPinApplicationsToStart {
            get {
                return ResourceManager.GetString("hlPinApplicationsToStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change.
        /// </summary>
        public static string hlSettingUpChangeBSP {
            get {
                return ResourceManager.GetString("hlSettingUpChangeBSP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change.
        /// </summary>
        public static string hlSettingUpChangeOutputPath {
            get {
                return ResourceManager.GetString("hlSettingUpChangeOutputPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View a summary of the selected image options.
        /// </summary>
        public static string hlViewImageOptionsSummary {
            get {
                return ResourceManager.GetString("hlViewImageOptionsSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View merged templates.
        /// </summary>
        public static string hlViewMergedTemplates {
            get {
                return ResourceManager.GetString("hlViewMergedTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy.
        /// </summary>
        public static string miConxtextMenuCopy {
            get {
                return ResourceManager.GetString("miConxtextMenuCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View Template.
        /// </summary>
        public static string miViewTemplate {
            get {
                return ResourceManager.GetString("miViewTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filename &apos;{0}&apos; has already been defined.  Choose another Filename..
        /// </summary>
        public static string msgCOSAddFileDuplicateFilenameError {
            get {
                return ResourceManager.GetString("msgCOSAddFileDuplicateFilenameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duplicate Filename.
        /// </summary>
        public static string msgCOSAddFileDuplicateFilenameErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSAddFileDuplicateFilenameErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filename &apos;{0}&apos; could not be found.  Choose another existing Filename..
        /// </summary>
        public static string msgCOSAddFileDuplicateFileNotFoundError {
            get {
                return ResourceManager.GetString("msgCOSAddFileDuplicateFileNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File Not Found.
        /// </summary>
        public static string msgCOSAddFileDuplicateFileNotFoundErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSAddFileDuplicateFileNotFoundErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name &apos;{0}&apos; has already been defined.  Choose another name..
        /// </summary>
        public static string msgCOSAddFileDuplicateNameError {
            get {
                return ResourceManager.GetString("msgCOSAddFileDuplicateNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duplicate Name.
        /// </summary>
        public static string msgCOSAddFileDuplicateNameErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSAddFileDuplicateNameErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify the Source.
        /// </summary>
        public static string msgCOSAddNewApplication {
            get {
                return ResourceManager.GetString("msgCOSAddNewApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add New Application.
        /// </summary>
        public static string msgCOSAddNewApplicationTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewApplicationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify the Source\ProvXML.
        /// </summary>
        public static string msgCOSAddNewApplicationWithProvXML {
            get {
                return ResourceManager.GetString("msgCOSAddNewApplicationWithProvXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify the Source.
        /// </summary>
        public static string msgCOSAddNewDataAsset {
            get {
                return ResourceManager.GetString("msgCOSAddNewDataAsset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify the Type.
        /// </summary>
        public static string msgCOSAddNewDataAssetGroup {
            get {
                return ResourceManager.GetString("msgCOSAddNewDataAssetGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add New Data Assets Group.
        /// </summary>
        public static string msgCOSAddNewDataAssetGroupTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewDataAssetGroupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All Types are currently in use.  Add Data Assets to existing groups..
        /// </summary>
        public static string msgCOSAddNewDataAssetsGroupNoMoreTypeError {
            get {
                return ResourceManager.GetString("msgCOSAddNewDataAssetsGroupNoMoreTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No More Available Types.
        /// </summary>
        public static string msgCOSAddNewDataAssetsGroupNoMoreTypeErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewDataAssetsGroupNoMoreTypeErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add New Data Asset.
        /// </summary>
        public static string msgCOSAddNewDataAssetTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewDataAssetTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify the Name.
        /// </summary>
        public static string msgCOSAddNewSetting {
            get {
                return ResourceManager.GetString("msgCOSAddNewSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify the Source.
        /// </summary>
        public static string msgCOSAddNewSettingAsset {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingAsset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add New Setting Asset.
        /// </summary>
        public static string msgCOSAddNewSettingAssetTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingAssetTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The Settings Path is not recognized by the policy defined in this image.  No settings can be found..
        /// </summary>
        public static string msgCOSAddNewSettingError {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings Path Not Recognized.
        /// </summary>
        public static string msgCOSAddNewSettingErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Macro replacement required.  Specify value for macro &apos;{0}&apos;:.
        /// </summary>
        public static string msgCOSAddNewSettingMacro {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingMacro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Define Macro for New Setting.
        /// </summary>
        public static string msgCOSAddNewSettingMacroTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingMacroTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на There are no more Settings avaiable for this setting group..
        /// </summary>
        public static string msgCOSAddNewSettingNoMoreError {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingNoMoreError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No More Available Settings.
        /// </summary>
        public static string msgCOSAddNewSettingNoMoreErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingNoMoreErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the Path.
        /// </summary>
        public static string msgCOSAddNewSettings {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на There are no more Paths avaiable for this Variant..
        /// </summary>
        public static string msgCOSAddNewSettingsNoMorePathError {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingsNoMorePathError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No More Available Paths.
        /// </summary>
        public static string msgCOSAddNewSettingsNoMorePathErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingsNoMorePathErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add New Settings.
        /// </summary>
        public static string msgCOSAddNewSettingsTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add New Setting.
        /// </summary>
        public static string msgCOSAddNewSettingTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewSettingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify the Condition name and value.
        /// </summary>
        public static string msgCOSAddNewTargetCondition {
            get {
                return ResourceManager.GetString("msgCOSAddNewTargetCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add New Condition.
        /// </summary>
        public static string msgCOSAddNewTargetConditionTitle {
            get {
                return ResourceManager.GetString("msgCOSAddNewTargetConditionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Other Target State Conditions must have both name and value set.  Value is &apos;{0}&apos; but the Name is not set..
        /// </summary>
        public static string msgCOSAddVariantConditionNameCantBeEmptyError {
            get {
                return ResourceManager.GetString("msgCOSAddVariantConditionNameCantBeEmptyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Condition &apos;{0}&apos; defined more than once.
        /// </summary>
        public static string msgCOSAddVariantConditionNameDuplicateError {
            get {
                return ResourceManager.GetString("msgCOSAddVariantConditionNameDuplicateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duplicate Conditions.
        /// </summary>
        public static string msgCOSAddVariantConditionNameDuplicateErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSAddVariantConditionNameDuplicateErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Both Name and Value must be set.
        /// </summary>
        public static string msgCOSAddVariantConditionNameOrValueCantBeEmptyErrorMsgTitle {
            get {
                return ResourceManager.GetString("msgCOSAddVariantConditionNameOrValueCantBeEmptyErrorMsgTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Other Target State Conditions must have both name and value set.  Name is &apos;{0}&apos; but the value is not set..
        /// </summary>
        public static string msgCOSAddVariantConditionValueCantBeEmptyError {
            get {
                return ResourceManager.GetString("msgCOSAddVariantConditionValueCantBeEmptyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Condition &apos;{0}&apos; has already been defined.  Choose another condition..
        /// </summary>
        public static string msgCOSAddVariantDuplicateConditionsError {
            get {
                return ResourceManager.GetString("msgCOSAddVariantDuplicateConditionsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duplicate Conditions.
        /// </summary>
        public static string msgCOSAddVariantDuplicateConditionsErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSAddVariantDuplicateConditionsErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Variant &apos;{0}&apos; has already been defined.  Choose another name..
        /// </summary>
        public static string msgCOSAddVariantNameDuplicateError {
            get {
                return ResourceManager.GetString("msgCOSAddVariantNameDuplicateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duplicate Variant Name.
        /// </summary>
        public static string msgCOSAddVariantNameDuplicateErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSAddVariantNameDuplicateErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You must set at least one Target State condition..
        /// </summary>
        public static string msgCOSAddVariantNoConditionsSetError {
            get {
                return ResourceManager.GetString("msgCOSAddVariantNoConditionsSetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No Conditions Set.
        /// </summary>
        public static string msgCOSAddVariantNoConditionsSetErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSAddVariantNoConditionsSetErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на There were bad policy packages ({0}) found in this image.  Packages:
        ///{1}.
        /// </summary>
        public static string msgCOSBadPolicyPackagesError {
            get {
                return ResourceManager.GetString("msgCOSBadPolicyPackagesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad Policy.
        /// </summary>
        public static string msgCOSBadPolicyPackagesErrorHeader {
            get {
                return ResourceManager.GetString("msgCOSBadPolicyPackagesErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The Default Variant can&apos;t be removed but you can clear it&apos;s values so it does nothing. Would you like to clear it&apos;s current settings?.
        /// </summary>
        public static string msgCOSCantRemoveDefaultVariant {
            get {
                return ResourceManager.GetString("msgCOSCantRemoveDefaultVariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t Remove Default.
        /// </summary>
        public static string msgCOSCantRemoveDefaultVariantTitle {
            get {
                return ResourceManager.GetString("msgCOSCantRemoveDefaultVariantTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You must set the Target State condition..
        /// </summary>
        public static string msgCOSEditConditionsNoConditionsSetError {
            get {
                return ResourceManager.GetString("msgCOSEditConditionsNoConditionsSetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No Condition Set.
        /// </summary>
        public static string msgCOSEditConditionsNoConditionsSetErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSEditConditionsNoConditionsSetErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You must set the Target State condition..
        /// </summary>
        public static string msgCOSEditTargetStateNoConditionSetError {
            get {
                return ResourceManager.GetString("msgCOSEditTargetStateNoConditionSetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No Target States.
        /// </summary>
        public static string msgCOSEditTargetStateNoConditionSetErrorTitle {
            get {
                return ResourceManager.GetString("msgCOSEditTargetStateNoConditionSetErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ERROR: {0}.
        /// </summary>
        public static string msgCOSErrors {
            get {
                return ResourceManager.GetString("msgCOSErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to save.  Fix errors and try again..
        /// </summary>
        public static string msgCOSFailedToSave {
            get {
                return ResourceManager.GetString("msgCOSFailedToSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Errors found.
        /// </summary>
        public static string msgCOSFailedToSaveTitle {
            get {
                return ResourceManager.GetString("msgCOSFailedToSaveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to remove this variant and all its customizations?.
        /// </summary>
        public static string msgCOSRemovetVariantAreYouSure {
            get {
                return ResourceManager.GetString("msgCOSRemovetVariantAreYouSure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove Variant.
        /// </summary>
        public static string msgCOSRemovetVariantAreYouSureTitle {
            get {
                return ResourceManager.GetString("msgCOSRemovetVariantAreYouSureTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WARNING: {0}.
        /// </summary>
        public static string msgCOSWarnings {
            get {
                return ResourceManager.GetString("msgCOSWarnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save to a different output location.
        /// </summary>
        public static string rbPickOutputLoc_NewLoc_Text {
            get {
                return ResourceManager.GetString("rbPickOutputLoc_NewLoc_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Replace the current image.
        /// </summary>
        public static string rbPickOutputLoc_Replace_Text {
            get {
                return ResourceManager.GetString("rbPickOutputLoc_Replace_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No. I want to build my image..
        /// </summary>
        public static string rbSelectOption_BuildImage {
            get {
                return ResourceManager.GetString("rbSelectOption_BuildImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create a new Windows Phone image.
        /// </summary>
        public static string rbSelectOption_CreateImage_Text {
            get {
                return ResourceManager.GetString("rbSelectOption_CreateImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (Advanced) Yes. I want to configure my own customizations..
        /// </summary>
        public static string rbSelectOption_customizeOS {
            get {
                return ResourceManager.GetString("rbSelectOption_customizeOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flash a Windows Phone image onto your phone.
        /// </summary>
        public static string rbSelectOption_FlashImage_Text {
            get {
                return ResourceManager.GetString("rbSelectOption_FlashImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Modify a Windows Phone image.
        /// </summary>
        public static string rbSelectOption_ModifyImage_Text {
            get {
                return ResourceManager.GetString("rbSelectOption_ModifyImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Production.
        /// </summary>
        public static string rbSelectOption_ProductionImage_Text {
            get {
                return ResourceManager.GetString("rbSelectOption_ProductionImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Retail.
        /// </summary>
        public static string rbSelectOption_RetailImage_Text {
            get {
                return ResourceManager.GetString("rbSelectOption_RetailImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Yes. I want to start by selecting multiple customization templates..
        /// </summary>
        public static string rbSelectOption_selectTemplates {
            get {
                return ResourceManager.GetString("rbSelectOption_selectTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Test.
        /// </summary>
        public static string rbSelectOption_TestImage_Text {
            get {
                return ResourceManager.GetString("rbSelectOption_TestImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;Source&gt;.
        /// </summary>
        public static string strCOSAddNewApplicationSource {
            get {
                return ResourceManager.GetString("strCOSAddNewApplicationSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;Source\ProvXML&gt;.
        /// </summary>
        public static string strCOSAddNewApplicationSourceOrProvXML {
            get {
                return ResourceManager.GetString("strCOSAddNewApplicationSourceOrProvXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;Source&gt;.
        /// </summary>
        public static string strCOSAddNewDataAssetSource {
            get {
                return ResourceManager.GetString("strCOSAddNewDataAssetSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;Source&gt;.
        /// </summary>
        public static string strCOSAddNewSettingAssetDefaultSource {
            get {
                return ResourceManager.GetString("strCOSAddNewSettingAssetDefaultSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;Name&gt;.
        /// </summary>
        public static string strCOSDefaultVariantName {
            get {
                return ResourceManager.GetString("strCOSDefaultVariantName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Base Image Size.
        /// </summary>
        public static string tbBaseImageSize {
            get {
                return ResourceManager.GetString("tbBaseImageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click OK to save, or else, click Cancel disgard..
        /// </summary>
        public static string tbCOSAddVariantClickOKorCancel {
            get {
                return ResourceManager.GetString("tbCOSAddVariantClickOKorCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на License:.
        /// </summary>
        public static string tbCOSApplicationLicense {
            get {
                return ResourceManager.GetString("tbCOSApplicationLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ProvXML:.
        /// </summary>
        public static string tbCOSApplicationProvXML {
            get {
                return ResourceManager.GetString("tbCOSApplicationProvXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Applications.
        /// </summary>
        public static string tbCOSApplicationsList {
            get {
                return ResourceManager.GetString("tbCOSApplicationsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Source:.
        /// </summary>
        public static string tbCOSApplicationSource {
            get {
                return ResourceManager.GetString("tbCOSApplicationSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Partition:.
        /// </summary>
        public static string tbCOSApplicationTargetPartition {
            get {
                return ResourceManager.GetString("tbCOSApplicationTargetPartition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data Assets Groups.
        /// </summary>
        public static string tbCOSDataAssetsGroupsList {
            get {
                return ResourceManager.GetString("tbCOSDataAssetsGroupsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type:.
        /// </summary>
        public static string tbCOSDataAssetsGroupType {
            get {
                return ResourceManager.GetString("tbCOSDataAssetsGroupType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data Assets.
        /// </summary>
        public static string tbCOSDataAssetsList {
            get {
                return ResourceManager.GetString("tbCOSDataAssetsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Source:.
        /// </summary>
        public static string tbCOSDataAssetSource {
            get {
                return ResourceManager.GetString("tbCOSDataAssetSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bold.
        /// </summary>
        public static string tbCOSHighlightingInstructionBold1 {
            get {
                return ResourceManager.GetString("tbCOSHighlightingInstructionBold1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на - Customization applied to image.
        /// </summary>
        public static string tbCOSHighlightingInstructionBold2 {
            get {
                return ResourceManager.GetString("tbCOSHighlightingInstructionBold2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Blue.
        /// </summary>
        public static string tbCOSHighlightingInstructionColor1 {
            get {
                return ResourceManager.GetString("tbCOSHighlightingInstructionColor1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на - Customization modified and not saved.
        /// </summary>
        public static string tbCOSHighlightingInstructionColor2 {
            get {
                return ResourceManager.GetString("tbCOSHighlightingInstructionColor2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Owner:.
        /// </summary>
        public static string tbCOSSettingAssetOwner {
            get {
                return ResourceManager.GetString("tbCOSSettingAssetOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Source:.
        /// </summary>
        public static string tbCOSSettingAssetSource {
            get {
                return ResourceManager.GetString("tbCOSSettingAssetSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Target:.
        /// </summary>
        public static string tbCOSSettingAssetTargetFileName {
            get {
                return ResourceManager.GetString("tbCOSSettingAssetTargetFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Description:.
        /// </summary>
        public static string tbCOSSettingDescription {
            get {
                return ResourceManager.GetString("tbCOSSettingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sample:.
        /// </summary>
        public static string tbCOSSettingSample {
            get {
                return ResourceManager.GetString("tbCOSSettingSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Assets.
        /// </summary>
        public static string tbCOSSettingsAssets {
            get {
                return ResourceManager.GetString("tbCOSSettingsAssets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path:.
        /// </summary>
        public static string tbCOSSettingsGroupPath {
            get {
                return ResourceManager.GetString("tbCOSSettingsGroupPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings Groups.
        /// </summary>
        public static string tbCOSSettingsGroupsList {
            get {
                return ResourceManager.GetString("tbCOSSettingsGroupsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string tbCOSSettingsList {
            get {
                return ResourceManager.GetString("tbCOSSettingsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value:.
        /// </summary>
        public static string tbCOSSettingValue {
            get {
                return ResourceManager.GetString("tbCOSSettingValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value (Binary):.
        /// </summary>
        public static string tbCOSSettingValueBinary {
            get {
                return ResourceManager.GetString("tbCOSSettingValueBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value (Number):.
        /// </summary>
        public static string tbCOSSettingValueNumber {
            get {
                return ResourceManager.GetString("tbCOSSettingValueNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value (Text):.
        /// </summary>
        public static string tbCOSSettingValueText {
            get {
                return ResourceManager.GetString("tbCOSSettingValueText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Step 1: Select Variant.
        /// </summary>
        public static string tbCOSStep1Instructions {
            get {
                return ResourceManager.GetString("tbCOSStep1Instructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Step 2: Select Customization.
        /// </summary>
        public static string tbCOSStep2Instructions {
            get {
                return ResourceManager.GetString("tbCOSStep2Instructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Step 3: Edit Customization.
        /// </summary>
        public static string tbCOSStep3Instructions {
            get {
                return ResourceManager.GetString("tbCOSStep3Instructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name:.
        /// </summary>
        public static string tbCOSTargetName {
            get {
                return ResourceManager.GetString("tbCOSTargetName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Targets.
        /// </summary>
        public static string tbCOSTargetsList {
            get {
                return ResourceManager.GetString("tbCOSTargetsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Target State Conditions.
        /// </summary>
        public static string tbCOSTargetStateList {
            get {
                return ResourceManager.GetString("tbCOSTargetStateList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value:.
        /// </summary>
        public static string tbCOSTargetValue {
            get {
                return ResourceManager.GetString("tbCOSTargetValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name.
        /// </summary>
        public static string tbCOSVariantName {
            get {
                return ResourceManager.GetString("tbCOSVariantName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter a brief description for the image:.
        /// </summary>
        public static string tbDescribe1_text {
            get {
                return ResourceManager.GetString("tbDescribe1_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This description will not show up on your phone..
        /// </summary>
        public static string tbDescribe2_text {
            get {
                return ResourceManager.GetString("tbDescribe2_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Boot Language:.
        /// </summary>
        public static string tbDIBootLanguage {
            get {
                return ResourceManager.GetString("tbDIBootLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Boot Locale:.
        /// </summary>
        public static string tbDIBootLocale {
            get {
                return ResourceManager.GetString("tbDIBootLocale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display Name:.
        /// </summary>
        public static string tbEditSettingAssetDisplayName {
            get {
                return ResourceManager.GetString("tbEditSettingAssetDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flashable Devices:.
        /// </summary>
        public static string tbFlashImageDevices {
            get {
                return ResourceManager.GetString("tbFlashImageDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flash this image to a connected phone:.
        /// </summary>
        public static string tbFlashTxt_Text {
            get {
                return ResourceManager.GetString("tbFlashTxt_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display Name:.
        /// </summary>
        public static string tbGetFileDlgDisplayName {
            get {
                return ResourceManager.GetString("tbGetFileDlgDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Source:.
        /// </summary>
        public static string tbGetFileDlgFileName {
            get {
                return ResourceManager.GetString("tbGetFileDlgFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The image is located here:.
        /// </summary>
        public static string tbImageLoc_Text {
            get {
                return ResourceManager.GetString("tbImageLoc_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Follow the instructions located.
        /// </summary>
        public static string tbInstr_Text {
            get {
                return ResourceManager.GetString("tbInstr_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Keyboard Languages.
        /// </summary>
        public static string tbKeyboardLanguages {
            get {
                return ResourceManager.GetString("tbKeyboardLanguages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Languages.
        /// </summary>
        public static string tbLanguagesSize {
            get {
                return ResourceManager.GetString("tbLanguagesSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The project file associated with the last image you created with Phone Image Designer is located here:.
        /// </summary>
        public static string tbModifyImage_ExistingProjectLoc {
            get {
                return ResourceManager.GetString("tbModifyImage_ExistingProjectLoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Note:.
        /// </summary>
        public static string tbNote_Text {
            get {
                return ResourceManager.GetString("tbNote_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you&apos;re building a retail image, you&apos;ll need to send the image catalog file to Microsoft for retail signing..
        /// </summary>
        public static string tbNoteText_Text {
            get {
                return ResourceManager.GetString("tbNoteText_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Congratulations! You&apos;ve finished configuring and customizing your image. Now, let&apos;s build it..
        /// </summary>
        public static string tbPageDesc_BuildImagePage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_BuildImagePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your image is now ready. Do you want to flash it to a phone connected to your machine?.
        /// </summary>
        public static string tbPageDesc_BuildSuccessPage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_BuildSuccessPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Windows Phone supports a wide array of OS feature customizations to help you make your phone unique, such as adding custom wallpapers, applications, and ringtones, and modifying network settings. .
        /// </summary>
        public static string tbPageDesc_CustomizationChoicePage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_CustomizationChoicePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Begin customizing your Windows Phone image to make it unique..
        /// </summary>
        public static string tbPageDesc_CustomizeOSPage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_CustomizeOSPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на It looks like you want to build an image of type .
        /// </summary>
        public static string tbPageDesc_DescribeImagePage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_DescribeImagePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на We need some more information to get underway..
        /// </summary>
        public static string tbPageDesc_DescribeImagePage_Text_2 {
            get {
                return ResourceManager.GetString("tbPageDesc_DescribeImagePage_Text_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ready to see your new Windows Phone image working on your phone?.
        /// </summary>
        public static string tbPageDesc_FlashImagePage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_FlashImagePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Creating, customizing, or flashing a Windows Phone image is easy with Phone Image Designer..
        /// </summary>
        public static string tbPageDesc_GettingStartedPage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_GettingStartedPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you&apos;ve previously created a Windows Phone image and need to modify it, this is the place to start. First, we need to find your previous image configuration file..
        /// </summary>
        public static string tbPageDesc_ModifyImagePage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_ModifyImagePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Where would you like to save the new image?.
        /// </summary>
        public static string tbPageDesc_PickOutputLocationPage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_PickOutputLocationPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Windows Phone supports multiple image type and each type serves a specific purpose during the phone development lifecycle. Pick the image type that best meets your needs..
        /// </summary>
        public static string tbPageDesc_SelectImagePage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_SelectImagePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select customization templates to jump-start your OS customization work. We&apos;ve found multiple templates that you can use. You can overwrite any values specified in the template in the next step..
        /// </summary>
        public static string tbPageDesc_SelectTemplatesPage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_SelectTemplatesPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Confirm some paths here so we can set up Phone Image Designer..
        /// </summary>
        public static string tbPageDesc_SettingUpPage_Text {
            get {
                return ResourceManager.GetString("tbPageDesc_SettingUpPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Build the image.
        /// </summary>
        public static string tbPageHeader_BuildImagePage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_BuildImagePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Success!.
        /// </summary>
        public static string tbPageHeader_BuildSuccessPage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_BuildSuccessPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you want to customize the operating system (OS) features?.
        /// </summary>
        public static string tbPageHeader_CustomizationChoicePage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_CustomizationChoicePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Customize operating system (OS) features.
        /// </summary>
        public static string tbPageHeader_CustomizeOSPage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_CustomizeOSPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Describe the image.
        /// </summary>
        public static string tbPageHeader_DescribeImagePage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_DescribeImagePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flash the image to your phone.
        /// </summary>
        public static string tbPageHeader_FlashImagePage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_FlashImagePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Getting started.
        /// </summary>
        public static string tbPageHeader_GettingStartedPage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_GettingStartedPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Modify an image.
        /// </summary>
        public static string tbPageHeader_ModifyImagePage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_ModifyImagePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pick the output location.
        /// </summary>
        public static string tbPageHeader_PickOutputLocationPage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_PickOutputLocationPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the image type.
        /// </summary>
        public static string tbPageHeader_SelectImagePage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_SelectImagePage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select customization templates.
        /// </summary>
        public static string tbPageHeader_SelectTemplatesPage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_SelectTemplatesPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Setup.
        /// </summary>
        public static string tbPageHeader_SettingUpPage_Text {
            get {
                return ResourceManager.GetString("tbPageHeader_SettingUpPage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This Settings Path is a template for creating additional settings by replacing the macro values in the path.  Click the button below to define the macros and create the new Settings Path..
        /// </summary>
        public static string tbPathHasUndefinedMacro {
            get {
                return ResourceManager.GetString("tbPathHasUndefinedMacro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the languages you want to include:.
        /// </summary>
        public static string tbPickLanguage_text {
            get {
                return ResourceManager.GetString("tbPickLanguage_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pick the location where you&apos;d like to save the image..
        /// </summary>
        public static string tbPickOutputLoc_NewLoc_Text {
            get {
                return ResourceManager.GetString("tbPickOutputLoc_NewLoc_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Overwrite any image located at the current location..
        /// </summary>
        public static string tbPickOutputLoc_Replace_Text {
            get {
                return ResourceManager.GetString("tbPickOutputLoc_Replace_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Application.
        /// </summary>
        public static string tbPinnedAppApplication {
            get {
                return ResourceManager.GetString("tbPinnedAppApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на App Type.
        /// </summary>
        public static string tbPinnedAppAppType {
            get {
                return ResourceManager.GetString("tbPinnedAppAppType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Background Color.
        /// </summary>
        public static string tbPinnedAppBackgroundColor {
            get {
                return ResourceManager.GetString("tbPinnedAppBackgroundColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Coordinates.
        /// </summary>
        public static string tbPinnedAppCoordinates {
            get {
                return ResourceManager.GetString("tbPinnedAppCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Featured Tile Layout:.
        /// </summary>
        public static string tbPinnedAppFeaturedTileLayout {
            get {
                return ResourceManager.GetString("tbPinnedAppFeaturedTileLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Layout Options.
        /// </summary>
        public static string tbPinnedAppLayoutOptions {
            get {
                return ResourceManager.GetString("tbPinnedAppLayoutOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MediumLarge Icon.
        /// </summary>
        public static string tbPinnedAppMediumLargeIcon {
            get {
                return ResourceManager.GetString("tbPinnedAppMediumLargeIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Application Name / URL.
        /// </summary>
        public static string tbPinnedAppNameURL {
            get {
                return ResourceManager.GetString("tbPinnedAppNameURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string tbPinnedAppSettings {
            get {
                return ResourceManager.GetString("tbPinnedAppSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Small Icon.
        /// </summary>
        public static string tbPinnedAppSmallIcon {
            get {
                return ResourceManager.GetString("tbPinnedAppSmallIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start Screen Layout:.
        /// </summary>
        public static string tbPinnedAppStartScreenLayout {
            get {
                return ResourceManager.GetString("tbPinnedAppStartScreenLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pinned Applications / Web Links.
        /// </summary>
        public static string tbPinnedAppTableHeader {
            get {
                return ResourceManager.GetString("tbPinnedAppTableHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tile Size.
        /// </summary>
        public static string tbPinnedAppTileSize {
            get {
                return ResourceManager.GetString("tbPinnedAppTileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Title.
        /// </summary>
        public static string tbPinnedAppTitle {
            get {
                return ResourceManager.GetString("tbPinnedAppTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Web Link URL.
        /// </summary>
        public static string tbPinnedAppWebLinkURL {
            get {
                return ResourceManager.GetString("tbPinnedAppWebLinkURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selected Image.
        /// </summary>
        public static string tbSelectedImage {
            get {
                return ResourceManager.GetString("tbSelectedImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selecting this option will skip all customizations and go straight to building your Windows Phone image. The image may not have network functionality configured properly if you do this..
        /// </summary>
        public static string tbSelectOption_BuildImage {
            get {
                return ResourceManager.GetString("tbSelectOption_BuildImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you&apos;ve never created a Windows Phone image before or want to create a new one from scratch, start here..
        /// </summary>
        public static string tbSelectOption_CreateImage_Text {
            get {
                return ResourceManager.GetString("tbSelectOption_CreateImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selecting this option will allow you to customize your phone from scratch..
        /// </summary>
        public static string tbSelectOption_customizeOS {
            get {
                return ResourceManager.GetString("tbSelectOption_customizeOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Want to see how your Windows Phone image looks on an actual phone? Flash the image to find out..
        /// </summary>
        public static string tbSelectOption_FlashImage_Text {
            get {
                return ResourceManager.GetString("tbSelectOption_FlashImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A manufacturing test (MMOS) image includes manufacturing OS which is optimized to help with MMI testing on the factory floor..
        /// </summary>
        public static string tbSelectOption_MMOSImage_Text {
            get {
                return ResourceManager.GetString("tbSelectOption_MMOSImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you&apos;ve already created a Windows Phone image and need to modify it (to change the image type or update a customization), start here..
        /// </summary>
        public static string tbSelectOption_ModifyImage_Text {
            get {
                return ResourceManager.GetString("tbSelectOption_ModifyImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A production image is similar to a final retail image, but is unlocked and doesn&apos;t contain security enforcements. This image doesn’t include Microsoft and Qualcomm test content. You can use this image for engineering work as well as mobile operator trials and other certification processes..
        /// </summary>
        public static string tbSelectOption_ProductionImage_Text {
            get {
                return ResourceManager.GetString("tbSelectOption_ProductionImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A retail image is one that you flash to final retail phones. All content—including packages, binaries, and applications—must be Microsoft-signed for this image to build. Click on help icon to find out how. .
        /// </summary>
        public static string tbSelectOption_RetailImage_Text {
            get {
                return ResourceManager.GetString("tbSelectOption_RetailImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A manufacturing retail image includes Full OS which is optimized to help with labeling and provisioning retail devices on the factory floor.  All content—including packages, binaries, and applications—must be Microsoft signed for this Image to build.  Click on help icon to find out how. MMI testing on the factory floor..
        /// </summary>
        public static string tbSelectOption_RetailManufacturingImage_Text {
            get {
                return ResourceManager.GetString("tbSelectOption_RetailManufacturingImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selecting this option will allow you to pick multiple customization templates as a starting point..
        /// </summary>
        public static string tbSelectOption_selectTemplates {
            get {
                return ResourceManager.GetString("tbSelectOption_selectTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You can use a test image to test the functionality of the OS and drivers on the phone. This image is unlocked and doesn&apos;t contain security enforcements. It includes Microsoft and Qualcomm test content..
        /// </summary>
        public static string tbSelectOption_TestImage_Text {
            get {
                return ResourceManager.GetString("tbSelectOption_TestImage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Available Templates.
        /// </summary>
        public static string tbSelectTemplates_Available {
            get {
                return ResourceManager.GetString("tbSelectTemplates_Available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selected Templates.
        /// </summary>
        public static string tbSelectTemplates_Selected {
            get {
                return ResourceManager.GetString("tbSelectTemplates_Selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the customization templates you want to include in your image. .
        /// </summary>
        public static string tbSelectTemplates_SelectTemplate_Text {
            get {
                return ResourceManager.GetString("tbSelectTemplates_SelectTemplate_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You must add the templates in priority order..
        /// </summary>
        public static string tbSelectTemplates_SelectTemplate_Text2 {
            get {
                return ResourceManager.GetString("tbSelectTemplates_SelectTemplate_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Higher priority templates will overwrite any settings defined in lower priority templates..
        /// </summary>
        public static string tbSelectTemplates_SelectTemplate_Text2_ToolTip {
            get {
                return ResourceManager.GetString("tbSelectTemplates_SelectTemplate_Text2_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на None.
        /// </summary>
        public static string tbSettingsPathPartDefault {
            get {
                return ResourceManager.GetString("tbSettingsPathPartDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на We&apos;ve located the hardware components here:.
        /// </summary>
        public static string tbSettingUp_CurrentLoc {
            get {
                return ResourceManager.GetString("tbSettingUp_CurrentLoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The current output location is set to:.
        /// </summary>
        public static string tbSettingUp_CurrentOutputLoc {
            get {
                return ResourceManager.GetString("tbSettingUp_CurrentOutputLoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Confirm the location of the hardware component drivers you&apos;ve downloaded as part of the BSP kit. These should contain the BSP and hardware component packages. This location is identified by the BSP.Config.XML file found under the BSP kit install folder..
        /// </summary>
        public static string tbSettingUp_HwDrvLocDesc {
            get {
                return ResourceManager.GetString("tbSettingUp_HwDrvLocDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1. Hardware component drivers.
        /// </summary>
        public static string tbSettingUp_HwDrvLocTitle {
            get {
                return ResourceManager.GetString("tbSettingUp_HwDrvLocTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Confirm where you want Phone Image Designer to save the image and related configuration files. You&apos;ll be able to return to and modify a previously built image from this location at a later time..
        /// </summary>
        public static string tbSettingUp_OutputLocationDesc {
            get {
                return ResourceManager.GetString("tbSettingUp_OutputLocationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 2. Output location.
        /// </summary>
        public static string tbSettingUp_OutputLocationTitle {
            get {
                return ResourceManager.GetString("tbSettingUp_OutputLocationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Speech  Languages.
        /// </summary>
        public static string tbSpeechLanguages {
            get {
                return ResourceManager.GetString("tbSpeechLanguages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Total Image Size.
        /// </summary>
        public static string tbTotalImageSize {
            get {
                return ResourceManager.GetString("tbTotalImageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User Interface  Languages.
        /// </summary>
        public static string tbUserInterfaceLanguages {
            get {
                return ResourceManager.GetString("tbUserInterfaceLanguages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Applications are information about applications that get installed on first boot..
        /// </summary>
        public static string ttCOSApplications {
            get {
                return ResourceManager.GetString("ttCOSApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A Data Assets Groups are a set of files prepopulated in the User Store to a common location predefined by their type..
        /// </summary>
        public static string ttCOSDataAssetsGroups {
            get {
                return ResourceManager.GetString("ttCOSDataAssetsGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Map Data Assets are map files that get pre-populated to a predefined directory in the User Store..
        /// </summary>
        public static string ttCOSMapData {
            get {
                return ResourceManager.GetString("ttCOSMapData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Map Data Assets are map files that get pre-populated to a predefined directory in the User Store..
        /// </summary>
        public static string ttCOSMapData1 {
            get {
                return ResourceManager.GetString("ttCOSMapData1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Target Filename on device.  Optional used for renaming file..
        /// </summary>
        public static string ttCOSSettingAssetTargetFileName {
            get {
                return ResourceManager.GetString("ttCOSSettingAssetTargetFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Example of entry in above field.
        /// </summary>
        public static string ttCOSSettingSample {
            get {
                return ResourceManager.GetString("ttCOSSettingSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The following file types are allowed:
        ///{0}.
        /// </summary>
        public static string ttCOSSettingsAssetFileTypes {
            get {
                return ResourceManager.GetString("ttCOSSettingsAssetFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings are values that can override the default value and change the characteristics of an image..
        /// </summary>
        public static string ttCOSSettingsGroup {
            get {
                return ResourceManager.GetString("ttCOSSettingsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings are values that can override the default value and change the characteristics of an image.  All settings under this path must be set..
        /// </summary>
        public static string ttCOSSettingsGroupAtomic {
            get {
                return ResourceManager.GetString("ttCOSSettingsGroupAtomic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type: Binary
        ///Default: {0}.
        /// </summary>
        public static string ttCOSSettingValueBinary {
            get {
                return ResourceManager.GetString("ttCOSSettingValueBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на None.
        /// </summary>
        public static string ttCOSSettingValueDefaultNone {
            get {
                return ResourceManager.GetString("ttCOSSettingValueDefaultNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type: Options
        ///Valid values:
        ///{0}.
        /// </summary>
        public static string ttCOSSettingValueEnumeration {
            get {
                return ResourceManager.GetString("ttCOSSettingValueEnumeration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} (Default).
        /// </summary>
        public static string ttCOSSettingValueEnumerationDefaultItem {
            get {
                return ResourceManager.GetString("ttCOSSettingValueEnumerationDefaultItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type: Number
        ///Default: {0}
        ///Min: {1}
        ///Max: {2}.
        /// </summary>
        public static string ttCOSSettingValueNumber {
            get {
                return ResourceManager.GetString("ttCOSSettingValueNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type: Text
        ///Default: {0}.
        /// </summary>
        public static string ttCOSSettingValueText {
            get {
                return ResourceManager.GetString("ttCOSSettingValueText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A Target is a set of conditions for which a varaint will be applied..
        /// </summary>
        public static string ttCOSTarget {
            get {
                return ResourceManager.GetString("ttCOSTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Assets can be chosen individually by specifying a file or as a group by specifying a directory..
        /// </summary>
        public static string ttDataAssetsSource {
            get {
                return ResourceManager.GetString("ttDataAssetsSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Optional.
        /// </summary>
        public static string ttEditSettingsAssetDisplayName {
            get {
                return ResourceManager.GetString("ttEditSettingsAssetDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (Administrator).
        /// </summary>
        public static string txtAdminStr {
            get {
                return ResourceManager.GetString("txtAdminStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All Files (*.*)|*.*.
        /// </summary>
        public static string txtAllFilesFilter {
            get {
                return ResourceManager.GetString("txtAllFilesFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Applications (*.xap, *.appx)|*.xap;*.appx| ProvXML (*.provxml, *.xml)|*.provxml;*.xml.
        /// </summary>
        public static string txtApplicationAndProvXMLFilter {
            get {
                return ResourceManager.GetString("txtApplicationAndProvXMLFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Applications (*.xap, *.appx)|*.xap;*.appx.
        /// </summary>
        public static string txtApplicationFilter {
            get {
                return ResourceManager.GetString("txtApplicationFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;Error: Source or Provxml required&gt;.
        /// </summary>
        public static string txtApplicationSourceOrProvxmlRequired {
            get {
                return ResourceManager.GetString("txtApplicationSourceOrProvxmlRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;Error: Source required&gt;.
        /// </summary>
        public static string txtApplicationSourceRequired {
            get {
                return ResourceManager.GetString("txtApplicationSourceRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad argument.
        /// </summary>
        public static string txtBadArgumentTitle {
            get {
                return ResourceManager.GetString("txtBadArgumentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bitmap (*.bmp)|*.bmp.
        /// </summary>
        public static string txtBMPFilter {
            get {
                return ResourceManager.GetString("txtBMPFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Command:.
        /// </summary>
        public static string txtBuildImageCommandLabel {
            get {
                return ResourceManager.GetString("txtBuildImageCommandLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calculating.
        /// </summary>
        public static string txtCalculatingPackages {
            get {
                return ResourceManager.GetString("txtCalculatingPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на BSP Config Files|*bsp.config.xml.
        /// </summary>
        public static string txtConfigFilter {
            get {
                return ResourceManager.GetString("txtConfigFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Applications.
        /// </summary>
        public static string txtCOSApplications {
            get {
                return ResourceManager.GetString("txtCOSApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data Assets Groups.
        /// </summary>
        public static string txtCOSDataAssetsGroups {
            get {
                return ResourceManager.GetString("txtCOSDataAssetsGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Custom.
        /// </summary>
        public static string txtCOSDefaultImageCustomizationName {
            get {
                return ResourceManager.GetString("txtCOSDefaultImageCustomizationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string txtCOSSettings {
            get {
                return ResourceManager.GetString("txtCOSSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Default.
        /// </summary>
        public static string txtCOSStaticVariantName {
            get {
                return ResourceManager.GetString("txtCOSStaticVariantName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Target{0}.
        /// </summary>
        public static string txtCOSTargetName {
            get {
                return ResourceManager.GetString("txtCOSTargetName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Targets.
        /// </summary>
        public static string txtCOSTargets {
            get {
                return ResourceManager.GetString("txtCOSTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click OK to save, or else, click Cancel discard..
        /// </summary>
        public static string txtCustomGetValueDialogInstructions {
            get {
                return ResourceManager.GetString("txtCustomGetValueDialogInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click Yes to continue, or else, click No to stay here..
        /// </summary>
        public static string txtCustomMessageBoxYesNoInstructions {
            get {
                return ResourceManager.GetString("txtCustomMessageBoxYesNoInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Windows Phone 8.1 {0} {1} image for Arm.fre build on {2}, {3}.
        /// </summary>
        public static string txtDefaultImageDescription {
            get {
                return ResourceManager.GetString("txtDefaultImageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error!.
        /// </summary>
        public static string txtError {
            get {
                return ResourceManager.GetString("txtError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WP Image Files|*.FFU.
        /// </summary>
        public static string txtFFUFilter {
            get {
                return ResourceManager.GetString("txtFFUFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sorry! Your device could not be flashed with the image you selected..
        /// </summary>
        public static string txtFlashError {
            get {
                return ResourceManager.GetString("txtFlashError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please correct the following error and try again:
        ///{0}.
        /// </summary>
        public static string txtFlashErrorDetail {
            get {
                return ResourceManager.GetString("txtFlashErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Congratulations! Your device has been successfully flashed with the image you selected..
        /// </summary>
        public static string txtFlashSuccess {
            get {
                return ResourceManager.GetString("txtFlashSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GIF (*.gif)|*.gif.
        /// </summary>
        public static string txtGIFFilter {
            get {
                return ResourceManager.GetString("txtGIFFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (Size: {0}).
        /// </summary>
        public static string txtImageTypeSize {
            get {
                return ResourceManager.GetString("txtImageTypeSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (Calculating size ...).
        /// </summary>
        public static string txtImageTypeSizeCalculating {
            get {
                return ResourceManager.GetString("txtImageTypeSizeCalculating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Assets can be chosen individually by file or as a group by directory.  Do you want to include all Assets in this directory?.
        /// </summary>
        public static string txtIncludeAllAssetsInDirectory {
            get {
                return ResourceManager.GetString("txtIncludeAllAssetsInDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Include All.
        /// </summary>
        public static string txtIncludeAllAssetsInDirectoryTitle {
            get {
                return ResourceManager.GetString("txtIncludeAllAssetsInDirectoryTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Provide environment variables in form of (var1=value1;var2=value2;..) after &apos;-Environment&apos;.
        /// </summary>
        public static string txtInvalidArgument {
            get {
                return ResourceManager.GetString("txtInvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The selected BSP config file is invalid. Please select a valid BSP config file to proceed.
        ///
        ///Error: {0} .
        /// </summary>
        public static string txtInvalidBspConfigError {
            get {
                return ResourceManager.GetString("txtInvalidBspConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на JEPG (*.jpeg)|*.jpeg.
        /// </summary>
        public static string txtJPEGFilter {
            get {
                return ResourceManager.GetString("txtJPEGFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на JPG (*.jpg)|*.jpg.
        /// </summary>
        public static string txtJPGFilter {
            get {
                return ResourceManager.GetString("txtJPGFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Application License (*.lic, *.xml)|*.lic;*.xml.
        /// </summary>
        public static string txtLicenseFilter {
            get {
                return ResourceManager.GetString("txtLicenseFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The Setting was not added because the macro replacement resulted in a path that has already been defined.  Please try different macro replacement values..
        /// </summary>
        public static string txtMacroPathAlreadyExists {
            get {
                return ResourceManager.GetString("txtMacroPathAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The macro value must not contain &apos;~&apos; characters.  Please try again..
        /// </summary>
        public static string txtMacroStillContainsTildeCharacter {
            get {
                return ResourceManager.GetString("txtMacroStillContainsTildeCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Map Data (*.map)|*.map.
        /// </summary>
        public static string txtMapDataFilter {
            get {
                return ResourceManager.GetString("txtMapDataFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Environment variable not set.
        /// </summary>
        public static string txtMissingEnvironmentVariableTitle {
            get {
                return ResourceManager.GetString("txtMissingEnvironmentVariableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Missing packages.
        /// </summary>
        public static string txtMissingPackages {
            get {
                return ResourceManager.GetString("txtMissingPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manufacturing Test.
        /// </summary>
        public static string txtMMOSImageLabel {
            get {
                return ResourceManager.GetString("txtMMOSImageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Another instance of ImageDesigner is already running..
        /// </summary>
        public static string txtMultipleInstancesMessage {
            get {
                return ResourceManager.GetString("txtMultipleInstancesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Oops!.
        /// </summary>
        public static string txtMultipleInstancesTitle {
            get {
                return ResourceManager.GetString("txtMultipleInstancesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No flashable devices found.
        /// </summary>
        public static string txtNoDeviceFoundError {
            get {
                return ResourceManager.GetString("txtNoDeviceFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Help document could not be located.
        /// </summary>
        public static string txtNoHelpDoc {
            get {
                return ResourceManager.GetString("txtNoHelpDoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This application needs administrator privileges to run properly..
        /// </summary>
        public static string txtNotAdminMessage {
            get {
                return ResourceManager.GetString("txtNotAdminMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Admin Privileges.
        /// </summary>
        public static string txtNotAdminTitle {
            get {
                return ResourceManager.GetString("txtNotAdminTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PNG (*.png)|*.png.
        /// </summary>
        public static string txtPNGFilter {
            get {
                return ResourceManager.GetString("txtPNGFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Production.
        /// </summary>
        public static string txtProductionImageLabel {
            get {
                return ResourceManager.GetString("txtProductionImageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Provisioning XML (*.provxml)|*.provxml.
        /// </summary>
        public static string txtProvXMLFilter {
            get {
                return ResourceManager.GetString("txtProvXMLFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Restart Customization?.
        /// </summary>
        public static string txtRestartCustomizationHeader {
            get {
                return ResourceManager.GetString("txtRestartCustomizationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Would you like to go back to the start of the OS customization section? 
        ///Any unsaved customization settings will be lost..
        /// </summary>
        public static string txtRestartCustomizationText {
            get {
                return ResourceManager.GetString("txtRestartCustomizationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Retail.
        /// </summary>
        public static string txtRetailImageLabel {
            get {
                return ResourceManager.GetString("txtRetailImageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manufacturing Retail.
        /// </summary>
        public static string txtRetailManufacturingImageLabel {
            get {
                return ResourceManager.GetString("txtRetailManufacturingImageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Success!.
        /// </summary>
        public static string txtSaveSuccessDlgHeader {
            get {
                return ResourceManager.GetString("txtSaveSuccessDlgHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your settings have been saved..
        /// </summary>
        public static string txtSaveSuccessDlgText {
            get {
                return ResourceManager.GetString("txtSaveSuccessDlgText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на * All sizes are approximate only.
        /// </summary>
        public static string txtSizesApprox {
            get {
                return ResourceManager.GetString("txtSizesApprox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Any unsaved settings will be lost.
        /// </summary>
        public static string txtStartOverMessage {
            get {
                return ResourceManager.GetString("txtStartOverMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure?.
        /// </summary>
        public static string txtStartOverMessageHeader {
            get {
                return ResourceManager.GetString("txtStartOverMessageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Test.
        /// </summary>
        public static string txtTestImageLabel {
            get {
                return ResourceManager.GetString("txtTestImageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unexpected argument &apos;{0}&apos;.
        /// </summary>
        public static string txtUnexpectedArgument {
            get {
                return ResourceManager.GetString("txtUnexpectedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning!.
        /// </summary>
        public static string txtWarning {
            get {
                return ResourceManager.GetString("txtWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Windows Phone Image Designer.
        /// </summary>
        public static string txtWindowTitle {
            get {
                return ResourceManager.GetString("txtWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Windows Media (*.wma)|*.wma.
        /// </summary>
        public static string txtWMAFilter {
            get {
                return ResourceManager.GetString("txtWMAFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Environment variable WPDKCONTENTROOT is not set. This could happen if you launched ImageDesigner from a non-elevated command window. 
        ///
        ///Please do one of the following to fix this issue:
        ///
        ///Launch from an elevated command prompt
        ///
        ///OR
        ///
        ///Launch by explicitly setting the variable on command line in the following form:
        ///    ImageDesigner.exe -Environment WPDKCONTENTROOT=&lt;value&gt;.
        /// </summary>
        public static string txtWpdkContentRootNotSet {
            get {
                return ResourceManager.GetString("txtWpdkContentRootNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Windows Phone Image Designer Project Files|*.wpid.xml.
        /// </summary>
        public static string txtWPIDFilter {
            get {
                return ResourceManager.GetString("txtWPIDFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на XML (*.xml)|*.xml.
        /// </summary>
        public static string txtXMLFilter {
            get {
                return ResourceManager.GetString("txtXMLFilter", resourceCulture);
            }
        }
    }
}
