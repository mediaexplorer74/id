<Application x:Class="Microsoft.WindowsPhone.ImageDesigner.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:common="clr-namespace:Microsoft.WindowsPhone.ImageDesigner.UI.Common">
  <Application.Resources>
    <common:ResizeModeToVisibilityConverter x:Key="resizeToVisConverter"/>
    <Style x:Key="HeaderedScrollViewer" TargetType="{x:Type ScrollViewer}">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ScrollViewer}">
            <Grid Background="{TemplateBinding Control.Background}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <DockPanel Margin="{TemplateBinding Control.Padding}">
                <ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                              Focusable="false">
                  <Border Margin="0,0,0,5" Background="#00AFDB">
                    <TextBlock HorizontalAlignment="Center" Foreground="White" Text="{Binding ElementName=This, Path=Header}"/>
                  </Border>
                </ScrollViewer>
                <ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local"/>
              </DockPanel>
              <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1"
                         Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                         ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                         Value="{TemplateBinding ScrollViewer.HorizontalOffset}"
                         Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"/>
              <ScrollBar Name="PART_VerticalScrollBar" Grid.Column="1"
                         Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                         ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                         Value="{TemplateBinding ScrollViewer.VerticalOffset}"
                         Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
      <Setter Property="FrameworkElement.MinWidth" Value="80"/>
      <Setter Property="Control.BorderBrush" Value="#FF009DCB"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.Background" Value="#FFCDECF3"/>
      <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:s="clr-namespace:System;assembly=mscorlib"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           TargetType="{x:Type ButtonBase}">
            <Border Name="border" BorderThickness="{TemplateBinding Border.BorderThickness}"
                    BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}"
                    SnapsToDevicePixels="true">
              <ContentPresenter Name="contentPresenter" RecognizesAccessKey="true"
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                Margin="{TemplateBinding Control.Padding}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="false"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="Button.IsDefaulted">
                <Setter TargetName="border" Property="Border.BorderBrush"
                        Value="{DynamicResource ResourceKey={x:Static JetSystemColors.HighlightBrushKey}}"/>
                <Trigger.Value>
                  <s:Boolean>True</s:Boolean>
                </Trigger.Value>
              </Trigger>
              <Trigger Property="UIElement.IsMouseOver">
                <Setter TargetName="border" Property="Panel.Background">
                  <Setter.Value>
                    <SolidColorBrush>#00AFDB</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground" Value="White"/>
                <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF016E89"/>
                <Trigger.Value>
                  <s:Boolean>True</s:Boolean>
                </Trigger.Value>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed">
                <Setter TargetName="border" Property="Panel.Background">
                  <Setter.Value>
                    <SolidColorBrush>#FFC4E5F6</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Setter TargetName="border" Property="Border.BorderBrush">
                  <Setter.Value>
                    <SolidColorBrush>#FF2C628B</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <s:Boolean>True</s:Boolean>
                </Trigger.Value>
              </Trigger>
              <Trigger Property="ToggleButton.IsChecked">
                <Setter TargetName="border" Property="Panel.Background">
                  <Setter.Value>
                    <SolidColorBrush>#FFBCDDEE</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Setter TargetName="border" Property="Border.BorderBrush">
                  <Setter.Value>
                    <SolidColorBrush>#FF245A83</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <s:Boolean>True</s:Boolean>
                </Trigger.Value>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled">
                <Setter TargetName="border" Property="Panel.Background">
                  <Setter.Value>
                    <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Setter TargetName="border" Property="Border.BorderBrush">
                  <Setter.Value>
                    <SolidColorBrush>#FFADB2B5</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground">
                  <Setter.Value>
                    <SolidColorBrush>#FF838383</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <s:Boolean>False</s:Boolean>
                </Trigger.Value>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="BlueButton" TargetType="{x:Type Button}">
      <Setter Property="Control.Padding" Value="3.5,0"/>
      <Setter Property="FrameworkElement.Margin" Value="3.5"/>
      <Setter Property="FrameworkElement.MinWidth" Value="80"/>
      <Setter Property="Control.Background" Value="Blue"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontFamily" Value="SegoiUI"/>
      <Setter Property="TextBlock.FontSize" Value="12"/>
    </Style>
    <Style x:Key="mboxHeader" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontFamily" Value="SegoiUI"/>
      <Setter Property="TextBlock.FontSize" Value="20"/>
      <Setter Property="TextBlock.FontWeight" Value="Medium"/>
      <Setter Property="TextBlock.Foreground" Value="#FF2EA1E2"/>
    </Style>
    <Style x:Key="mboxMessage" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontFamily" Value="SegoiUI"/>
      <Setter Property="TextBlock.FontSize" Value="14"/>
      <Setter Property="TextBlock.FontWeight" Value="Medium"/>
      <Setter Property="TextBlock.Foreground" Value="#FF767676"/>
    </Style>
    <Style x:Key="mboxInfo" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontFamily" Value="SegoiUI"/>
      <Setter Property="TextBlock.FontSize" Value="10"/>
      <Setter Property="TextBlock.FontWeight" Value="Medium"/>
      <Setter Property="TextBlock.Foreground" Value="#FF767676"/>
    </Style>
    <Style x:Key="tbPageTitle" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontFamily" Value="SegoiUI"/>
      <Setter Property="TextBlock.FontSize" Value="18"/>
      <Setter Property="TextBlock.FontWeight" Value="Medium"/>
    </Style>
    <Style x:Key="tbPageDesc" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontFamily" Value="SegoiUI"/>
      <Setter Property="TextBlock.FontSize" Value="13"/>
      <Setter Property="TextBlock.Foreground" Value="#FF767676"/>
    </Style>
    <Style x:Key="tbPageDescBold" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontFamily" Value="SegoiUI"/>
      <Setter Property="TextBlock.FontSize" Value="13"/>
      <Setter Property="TextBlock.FontWeight" Value="Medium"/>
      <Setter Property="TextBlock.Foreground" Value="#FF767676"/>
    </Style>
    <Style x:Key="tbSectionTitle" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontFamily" Value="SegoiUI"/>
      <Setter Property="TextBlock.FontSize" Value="14"/>
    </Style>
    <Style x:Key="tbSectionDesc" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontSize" Value="12"/>
      <Setter Property="TextBlock.Foreground" Value="#FF767676"/>
    </Style>
    <Style x:Key="txbSectionDesc" TargetType="{x:Type TextBox}">
      <Setter Property="Control.FontSize" Value="12"/>
      <Setter Property="Control.Foreground" Value="#FF767676"/>
    </Style>
    <Style x:Key="hyperLink" TargetType="{x:Type Hyperlink}">
      <Setter Property="TextElement.FontSize" Value="12"/>
      <Setter Property="TextElement.FontStyle" Value="Italic"/>
      <Setter Property="TextElement.Foreground" Value="#FF0D06AC"/>
    </Style>
    <Style TargetType="{x:Type RadioButton}">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RadioButton}">
            <BulletDecorator Background="White" Cursor="Hand">
              <BulletDecorator.Bullet>
                <Grid Height="15" Width="15">
                  <Border Name="RadioOuter" Background="Transparent" BorderBrush="#FF2EA1E2" BorderThickness="2"
                          CornerRadius="2"/>
                  <Border Name="RadioMark" CornerRadius="0" Margin="4" Background="#FF2EA1E2" Visibility="Hidden"/>
                </Grid>
              </BulletDecorator.Bullet>
              <TextBlock Margin="5,1,0,0" Foreground="#FF3E3E3E" FontFamily="SegoiUI" FontSize="14">
                <ContentPresenter/>
              </TextBlock>
            </BulletDecorator>
            <ControlTemplate.Triggers>
              <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="RadioMark" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="RadioOuter" Property="Border.BorderBrush" Value="#FF2EA1E2"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="RadioMark" Property="UIElement.Visibility" Value="Hidden"/>
                <Setter TargetName="RadioOuter" Property="Border.BorderBrush" Value="Gray"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="TitleComboBox" TargetType="{x:Type ComboBoxItem}">
      <Setter Property="Control.Background" Value="#00AFDB"/>
      <Setter Property="Control.Foreground" Value="White"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ComboBoxItem}">
            <Border x:Name="myBorder" Margin="5" HorizontalAlignment="Left">
              <ContentPresenter/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="myBorder" Property="Border.Background" Value="White"/>
                <Setter Property="Control.Foreground" Value="#00AFDB"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="MainColor" Color="White"/>
    <SolidColorBrush x:Key="MainColorLight" Color="White"/>
    <SolidColorBrush x:Key="MainColorDark" Color="White"/>
    <SolidColorBrush x:Key="BorderMainBrush" Color="White"/>
    <SolidColorBrush x:Key="BorderDarkMainBrush" Color="White"/>
    <SolidColorBrush x:Key="BackgroundGrayDark" Color="White"/>
    <SolidColorBrush x:Key="BackgroundGrayLight" Color="White"/>
    <SolidColorBrush x:Key="ForegroundDisabledBrush" Color="White"/>
    <SolidColorBrush x:Key="ForegroundBrush" Color="White"/>
    <LinearGradientBrush x:Key="FormBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
      <GradientStop Color="White" Offset="0.31"/>
      <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <VisualStateManager.VisualStateGroups>
          <VisualStateGroup x:Name="CommonStates">
            <VisualState x:Name="Normal"/>
            <VisualState x:Name="MouseOver"/>
            <VisualState x:Name="Pressed"/>
            <VisualState x:Name="Disabled"/>
          </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Border x:Name="Border" SnapsToDevicePixels="true" Grid.ColumnSpan="2" Background="#00AFDB"
                BorderBrush="#00AFDB" BorderThickness="1"/>
        <Border x:Name="Border2" Grid.Column="0" SnapsToDevicePixels="true" Margin="1" Background="#00AFDB"
                BorderBrush="#00AFDB" BorderThickness="0,0,1,0"/>
        <Border x:Name="Border3" Grid.Column="1" SnapsToDevicePixels="true" BorderBrush="White" BorderThickness="1">
          <Path x:Name="Arrow" Data="M 0,0 L 4,4 8,0 Z" Fill="White" HorizontalAlignment="Center"
                VerticalAlignment="Center"/>
        </Border>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="UIElement.IsMouseOver" Value="true">
          <Setter TargetName="Border" Property="Border.Background" Value="#00AFDB"/>
          <Setter TargetName="Border" Property="Border.BorderBrush" Value="White"/>
          <Setter TargetName="Border2" Property="Border.BorderBrush" Value="White"/>
          <Setter TargetName="Arrow" Property="Shape.Fill" Value="White"/>
        </Trigger>
        <Trigger Property="ToggleButton.IsChecked" Value="true">
          <Setter TargetName="Border" Property="Border.Background" Value="#00AFDB"/>
          <Setter TargetName="Border" Property="Border.BorderBrush" Value="White"/>
          <Setter TargetName="Border2" Property="Border.BorderBrush" Value="White"/>
          <Setter TargetName="Arrow" Property="Shape.Fill" Value="White"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
      <Border x:Name="PART_ContentHost" Background="{TemplateBinding Control.Background}" Focusable="false"/>
    </ControlTemplate>
    <Style TargetType="{x:Type ComboBoxItem}">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ComboBoxItem}">
            <Border x:Name="myBorder" Margin="3">
              <ContentPresenter/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="myBorder" Property="Border.Background" Value="White"/>
                <Setter Property="Control.Foreground" Value="#00AFDB"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ColoredComboBox" TargetType="{x:Type ComboBox}">
      <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
      <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
      <Setter Property="FrameworkElement.Margin" Value="2"/>
      <Setter Property="FrameworkElement.MinHeight" Value="20"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ComboBox}">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver"/>
                  <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ToggleButton x:Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="false"
                            Template="{StaticResource ComboBoxToggleButton}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <ContentPresenter x:Name="ContentSite" Margin="3,3,23,3" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                HorizontalAlignment="Left" IsHitTestVisible="false" VerticalAlignment="Center"/>
              <TextBox x:Name="PART_EditableTextBox" Margin="3,3,23,3" Background="Transparent" Focusable="true"
                       HorizontalAlignment="Left" IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}"
                       Template="{StaticResource ComboBoxTextBox}" VerticalAlignment="Center" Visibility="Hidden"
                       Style="{x:Null}"/>
              <Popup x:Name="Popup" AllowsTransparency="true" Focusable="false"
                     IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Placement="Bottom" PopupAnimation="Fade">
                <Grid x:Name="DropDown" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                      MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" SnapsToDevicePixels="true">
                  <Border x:Name="DropDownBorder" Background="#00AFDB" BorderBrush="{StaticResource BorderDarkMainBrush}"
                          BorderThickness="1" CornerRadius="0"/>
                  <ScrollViewer Margin="2" SnapsToDevicePixels="true">
                    <StackPanel KeyboardNavigation.DirectionalNavigation="Contained" IsItemsHost="true"
                                TextBlock.Foreground="White"/>
                  </ScrollViewer>
                </Grid>
              </Popup>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="ItemsControl.HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95"/>
              </Trigger>
              <Trigger Property="ItemsControl.IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
              </Trigger>
              <Trigger Property="ComboBox.IsEditable" Value="true">
                <Setter Property="Control.IsTabStop" Value="false"/>
                <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="MetroWindowStyle" TargetType="{x:Type Window}">
      <Setter Property="Control.Foreground"
              Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
      <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
      <Setter Property="Window.WindowStyle" Value="None"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Window}">
            <Grid Background="#00AFDB">
              <Border x:Name="MainBorder" BorderThickness="4" Background="#00AFDB">
                <DockPanel LastChildFill="true">
                  <Border x:Name="PART_TITLEBAR" Margin="0,0,0,0" Height="30" DockPanel.Dock="Top" Background="#00AFDB">
                    <DockPanel LastChildFill="false">
                      <Image Margin="0" Source="/ImageDesigner;component/Resources/Images/WPLogoWhite.png" Width="25"
                             Height="28"/>
                      <TextBlock Margin="4,0,0,4" VerticalAlignment="Center" Foreground="White" TextWrapping="NoWrap"
                                 Text="{TemplateBinding Window.Title}" FontSize="16"/>
                      <Button x:Name="PART_CLOSE" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="5" Height="20"
                              Width="20" Style="{DynamicResource MetroWindowButtonStyle}">
                        <Path Data="F1 M 54.0573,47.8776 L 38.1771,31.9974 54.0547,16.1198 C 55.7604,14.4141 55.7604,11.6511 54.0573,9.94531 52.3516,8.23962 49.5859,8.23962 47.8802,9.94531 L 32.0026,25.8229 16.1224,9.94531 C 14.4167,8.23962 11.6511,8.23962 9.94794,9.94531 8.24219,11.6511 8.24219,14.4141 9.94794,16.1198 L 25.8255,32 9.94794,47.8776 C 8.24219,49.5834 8.24219,52.3477 9.94794,54.0534 11.6511,55.7572 14.4167,55.7585 16.1224,54.0534 L 32.0026,38.1745 47.8802,54.0534 C 49.5859,55.7585 52.3516,55.7572 54.0573,54.0534 55.7604,52.3477 55.763,49.5834 54.0573,47.8776 Z"
                              Stretch="Uniform" Fill="#FFAA0A0A" Width="10" Margin="0,0,0,0"/>
                      </Button>
                      <Button x:Name="PART_MAXIMIZE_RESTORE" DockPanel.Dock="Right" Margin="5" HorizontalAlignment="Center"
                              VerticalAlignment="Center" Height="20" Width="20" Style="{DynamicResource MetroWindowButtonStyle}"
                              Visibility="{TemplateBinding ResizeMode, Converter={StaticResource resizeToVisConverter}}"
                              Background="{x:Null}">
                        <Path Data="M 4.3685131,23.127279 L 4.3685131,47.283243 47.117023,47.283243 47.117023,23.127279 M 0,10.684 L 53.755001,10.684 53.755001,51.668001 0,51.668001 M 8.5679998,0 L 58.668022,0 64,0 64,5.6864691 64,45.317999 58.668022,45.317999 58.668022,5.6864691 8.5679998,5.6864691 Z"
                              Stretch="Uniform" Fill="#FF2121CD" Width="10" Margin="0,0,0,0"/>
                      </Button>
                      <Button x:Name="PART_MINIMIZE" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"
                              DockPanel.Dock="Right" Height="20" Width="20" Style="{DynamicResource MetroWindowButtonStyle}"
                              VerticalContentAlignment="Bottom">
                        <ContentControl.Content>
                          <Path Data="M 0,20 L 53.333,20 53.333,8.888 0,8.888 Z" Stretch="Uniform" Fill="#FF2121CD" Width="10"
                                Margin="0,0,0,5"/>
                        </ContentControl.Content>
                      </Button>
                      <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Center">
                        <ComboBox x:Name="cmbLanguageSelector" Margin="5,0,0,0"
                                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}" Style="{StaticResource ColoredComboBox}"
                                  Height="20" MinWidth="120" Foreground="White" Background="#00AFDB"
                                  ItemsSource="{Binding LocalizedLanguages}" SelectedIndex="{Binding SelectedIndex}"/>
                      </StackPanel>
                    </DockPanel>
                  </Border>
                  <AdornerDecorator DockPanel.Dock="Bottom">
                    <ContentPresenter ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"/>
                  </AdornerDecorator>
                </DockPanel>
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="Window.ResizeMode" Value="CanResizeWithGrip">
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Window}">
                <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        Background="{TemplateBinding Control.Background}">
                  <Grid>
                    <AdornerDecorator>
                      <ContentPresenter ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                        Content="{TemplateBinding ContentControl.Content}"
                                        ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed"
                                VerticalAlignment="Bottom"/>
                  </Grid>
                </Border>
                <ControlTemplate.Triggers>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip"/>
                      <Condition Property="Window.WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter TargetName="WindowResizeGrip" Property="UIElement.Visibility" Value="Visible"/>
                  </MultiTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="CustomMessageBoxStyle" TargetType="{x:Type Window}">
      <Setter Property="Control.Foreground"
              Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
      <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
      <Setter Property="Window.WindowStyle" Value="None"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Window}">
            <Grid Background="#00AFDB">
              <Border x:Name="MainBorder" BorderThickness="4" Background="#00AFDB">
                <DockPanel LastChildFill="true">
                  <Border x:Name="PART_TITLEBAR" Margin="0,0,0,0" Height="10" DockPanel.Dock="Top" Background="#00AFDB">
                    <DockPanel LastChildFill="false">
                      <Button x:Name="PART_CLOSE" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="5" Height="20"
                              Width="20" Style="{DynamicResource MetroWindowButtonStyle}" Visibility="Collapsed">
                        <Path Data="F1 M 54.0573,47.8776 L 38.1771,31.9974 54.0547,16.1198 C 55.7604,14.4141 55.7604,11.6511 54.0573,9.94531 52.3516,8.23962 49.5859,8.23962 47.8802,9.94531 L 32.0026,25.8229 16.1224,9.94531 C 14.4167,8.23962 11.6511,8.23962 9.94794,9.94531 8.24219,11.6511 8.24219,14.4141 9.94794,16.1198 L 25.8255,32 9.94794,47.8776 C 8.24219,49.5834 8.24219,52.3477 9.94794,54.0534 11.6511,55.7572 14.4167,55.7585 16.1224,54.0534 L 32.0026,38.1745 47.8802,54.0534 C 49.5859,55.7585 52.3516,55.7572 54.0573,54.0534 55.7604,52.3477 55.763,49.5834 54.0573,47.8776 Z"
                              Stretch="Uniform" Fill="#FFAA0A0A" Width="10" Margin="0,0,0,0"/>
                      </Button>
                      <Button x:Name="PART_MAXIMIZE_RESTORE" DockPanel.Dock="Right" Margin="5" HorizontalAlignment="Center"
                              VerticalAlignment="Center" Height="15" Width="20" Style="{DynamicResource MetroWindowButtonStyle}"
                              Visibility="{TemplateBinding ResizeMode, Converter={StaticResource resizeToVisConverter}}"
                              Background="{x:Null}">
                        <Path Data="M 4.3685131,23.127279 L 4.3685131,47.283243 47.117023,47.283243 47.117023,23.127279 M 0,10.684 L 53.755001,10.684 53.755001,51.668001 0,51.668001 M 8.5679998,0 L 58.668022,0 64,0 64,5.6864691 64,45.317999 58.668022,45.317999 58.668022,5.6864691 8.5679998,5.6864691 Z"
                              Stretch="Uniform" Fill="#FF2121CD" Width="10" Margin="0,0,0,0"/>
                      </Button>
                      <Button x:Name="PART_MINIMIZE" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"
                              DockPanel.Dock="Right" Height="20" Width="20" Style="{DynamicResource MetroWindowButtonStyle}"
                              VerticalContentAlignment="Bottom"
                              Visibility="{TemplateBinding ResizeMode, Converter={StaticResource resizeToVisConverter}}">
                        <ContentControl.Content>
                          <Path Data="M 0,20 L 53.333,20 53.333,8.888 0,8.888 Z" Stretch="Uniform" Fill="#FF2121CD" Width="10"
                                Margin="0,0,0,5"/>
                        </ContentControl.Content>
                      </Button>
                    </DockPanel>
                  </Border>
                  <AdornerDecorator DockPanel.Dock="Bottom">
                    <ContentPresenter ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"/>
                  </AdornerDecorator>
                </DockPanel>
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="Window.ResizeMode" Value="CanResizeWithGrip">
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Window}">
                <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        Background="{TemplateBinding Control.Background}">
                  <Grid>
                    <AdornerDecorator>
                      <ContentPresenter ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                        Content="{TemplateBinding ContentControl.Content}"
                                        ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed"
                                VerticalAlignment="Bottom"/>
                  </Grid>
                </Border>
                <ControlTemplate.Triggers>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip"/>
                      <Condition Property="Window.WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter TargetName="WindowResizeGrip" Property="UIElement.Visibility" Value="Visible"/>
                  </MultiTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="MetroWindowButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="FrameworkElement.FocusVisualStyle">
        <Setter.Value>
          <Style>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate>
                  <Rectangle Margin="2" SnapsToDevicePixels="true"
                             Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                             StrokeDashArray="1 2"/>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
      <Setter Property="Control.Background" Value="{x:Null}"/>
      <Setter Property="Control.BorderBrush" Value="#FF707070"/>
      <Setter Property="Control.Foreground"
              Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
      <Setter Property="Control.BorderThickness" Value="0"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.Padding" Value="1"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter TargetName="border" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="border" Property="Border.Background" Value="#FFBEE6FD"/>
                <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF3C7FB1"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="border" Property="Border.Background" Value="#FFC4E5F6"/>
                <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF2C628B"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="border" Property="Border.Background" Value="#FFF4F4F4"/>
                <Setter TargetName="border" Property="Border.BorderBrush" Value="#FFADB2B5"/>
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <LinearGradientBrush x:Key="ProgressBarBorderBrush" EndPoint="0,1" StartPoint="0,0">
      <GradientBrush.GradientStops>
        <GradientStop Color="#B2B2B2" Offset="0"/>
        <GradientStop Color="#8C8C8C" Offset="1"/>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarBackground" EndPoint="1,0" StartPoint="0,0">
      <GradientBrush.GradientStops>
        <GradientStop Color="#BABABA" Offset="0"/>
        <GradientStop Color="#C7C7C7" Offset="0.5"/>
        <GradientStop Color="#BABABA" Offset="1"/>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarTopHighlight" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStop Color="#80FFFFFF" Offset="0.05"/>
        <GradientStop Color="#00FFFFFF" Offset="0.25"/>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarGlassyHighlight" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStop Color="#50FFFFFF" Offset="0.5385"/>
        <GradientStop Color="#00FFFFFF" Offset="0.5385"/>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStop Color="#90FFFFFF" Offset="0.5385"/>
        <GradientStop Color="#00FFFFFF" Offset="0.5385"/>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft" RadiusX="1" RadiusY="1"
                         RelativeTransform="1,0,0,1,0.5,0.5">
      <GradientBrush.GradientStops>
        <GradientStop Color="#60FFFFC4" Offset="0"/>
        <GradientStop Color="#00FFFFC4" Offset="1"/>
      </GradientBrush.GradientStops>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect" StartPoint="0,1" EndPoint="0,0">
      <GradientBrush.GradientStops>
        <GradientStop Color="#60FFFFC4" Offset="0"/>
        <GradientStop Color="#00FFFFC4" Offset="1"/>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight" RadiusX="1" RadiusY="1"
                         RelativeTransform="1,0,0,1,-0.5,0.5">
      <GradientBrush.GradientStops>
        <GradientStop Color="#60FFFFC4" Offset="0"/>
        <GradientStop Color="#00FFFFC4" Offset="1"/>
      </GradientBrush.GradientStops>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft" StartPoint="0,0" EndPoint="1,0">
      <GradientBrush.GradientStops>
        <GradientStop Color="#0C000000" Offset="0"/>
        <GradientStop Color="#20000000" Offset="0.3"/>
        <GradientStop Color="#00000000" Offset="1"/>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight" StartPoint="0,0" EndPoint="1,0">
      <GradientBrush.GradientStops>
        <GradientStop Color="#00000000" Offset="0"/>
        <GradientStop Color="#20000000" Offset="0.7"/>
        <GradientStop Color="#0C000000" Offset="1"/>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
      <GradientBrush.GradientStops>
        <GradientStop Color="#00FFFFFF" Offset="0"/>
        <GradientStop Color="#60FFFFFF" Offset="0.4"/>
        <GradientStop Color="#60FFFFFF" Offset="0.6"/>
        <GradientStop Color="#00FFFFFF" Offset="1"/>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style TargetType="{x:Type ProgressBar}">
      <Setter Property="Control.Foreground" Value="#01D328"/>
      <Setter Property="Control.Background" Value="{StaticResource ProgressBarBackground}"/>
      <Setter Property="Control.BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ProgressBar}">
            <Grid Name="TemplateRoot" SnapsToDevicePixels="true">
              <Rectangle Fill="{TemplateBinding Control.Background}" RadiusX="2" RadiusY="2"/>
              <Border Background="{StaticResource ProgressBarGlassyHighlight}" Margin="1" CornerRadius="2"/>
              <Border BorderBrush="#80FFFFFF" Background="{StaticResource ProgressBarTopHighlight}"
                      BorderThickness="1,0,1,1" Margin="1"/>
              <Rectangle Name="PART_Track" Margin="1"/>
              <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
                <Grid Name="Foreground">
                  <Rectangle x:Name="Indicator" Fill="{TemplateBinding Control.Foreground}"/>
                  <Grid x:Name="Animation" ClipToBounds="true">
                    <Rectangle x:Name="PART_GlowRect" Width="100" Fill="{StaticResource ProgressBarIndicatorAnimatedFill}"
                               Margin="-100,0,0,0" HorizontalAlignment="Left"/>
                  </Grid>
                  <Grid x:Name="Overlay">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition MaxWidth="15"/>
                      <ColumnDefinition Width="0.1*"/>
                      <ColumnDefinition MaxWidth="15"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition/>
                      <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Rectangle x:Name="LeftDark" Grid.RowSpan="2" Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft}"
                               RadiusX="1" RadiusY="1" Margin="1,1,0,1"/>
                    <Rectangle x:Name="RightDark" Grid.RowSpan="2" Grid.Column="2" RadiusX="1" RadiusY="1"
                               Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight}" Margin="0,1,1,1"/>
                    <Rectangle x:Name="LeftLight" Grid.Column="0" Grid.Row="2"
                               Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft}"/>
                    <Rectangle x:Name="CenterLight" Grid.Column="1" Grid.Row="2"
                               Fill="{StaticResource ProgressBarIndicatorLightingEffect}"/>
                    <Rectangle x:Name="RightLight" Grid.Column="2" Grid.Row="2"
                               Fill="{StaticResource ProgressBarIndicatorLightingEffectRight}"/>
                    <Border x:Name="Highlight1" Grid.RowSpan="2" Grid.ColumnSpan="3"
                            Background="{StaticResource ProgressBarIndicatorGlassyHighlight}"/>
                    <Border x:Name="Highlight2" Grid.RowSpan="2" Grid.ColumnSpan="3"
                            Background="{StaticResource ProgressBarTopHighlight}"/>
                  </Grid>
                </Grid>
              </Decorator>
              <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="ProgressBar.Orientation" Value="Vertical">
                <Setter TargetName="TemplateRoot" Property="FrameworkElement.LayoutTransform">
                  <Setter.Value>
                    <RotateTransform Angle="-90"/>
                  </Setter.Value>
                </Setter>
              </Trigger>
              <Trigger Property="ProgressBar.IsIndeterminate" Value="true">
                <Setter TargetName="LeftDark" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="RightDark" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="LeftLight" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="CenterLight" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="RightLight" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="Indicator" Property="UIElement.Visibility" Value="Collapsed"/>
              </Trigger>
              <Trigger Property="ProgressBar.IsIndeterminate" Value="false">
                <Setter TargetName="Animation" Property="Panel.Background" Value="#80B5FFA9"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Color x:Key="WPBlue">#FF005A70</Color>
  </Application.Resources>
</Application>